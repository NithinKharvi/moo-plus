<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AAD///8A////AP///wD///8ABIRCBASEQgQFhkPuBYZD7gSEQvwEhEL8BIRC/gSEQv4EhEL7BIRC+wSE
        QicEhEInBIRCBgSEQgYEhUPvBIVD7wSEQvwEhEL8BIRC/ASEQvwEhULwBIVC8ASEQggEhEII////AP//
        /wD///8A////AP///wD///8A////AP///wAEhEIEBIRCBAWGQ+4FhkPuBIRC/ASEQvwEhEL+BIRC/gSE
        QvsEhEL7BIRCJwSEQicEhEIGBIRCBgSFQ+8EhUPvBIRC/ASEQvwEhEL8BIRC/ASFQvAEhULwBIRCCASE
        Qgj///8A////AP///wD///8A////AP///wD///8A////AASEQgYEhEIGBIVD/ASFQ/w9zoT/Pc6E/zjK
        gP84yoD/B4lG9AeJRvQEhEIqBIRCKgSEQgMEhEIDBIRC/gSEQv4cuGn/HLhp/xe0ZP8XtGT/BIVC+QSF
        QvkEhEIMBIRCDP///wD///8A////AP///wD///8A////AP///wD///8ABIRCBgSEQgYEhUP8BIVD/D3O
        hP89zoT/OMqA/zjKgP8HiUb0B4lG9ASEQioEhEIqBIRCAwSEQgMEhEL+BIRC/hy4af8cuGn/F7Rk/xe0
        ZP8EhUL5BIVC+QSEQgwEhEIM////AP///wD///8A////AP///wD///8A////AP///wAEhEIEBIRCBASE
        Qv0EhEL9Q9KJ/0PSif89zoT/Pc6E/weIRvYHiEb2BIRCQQSEQkEEhEIxBIRCMQSFQ/sEhUP7Ibts/yG7
        bP8cuGn/HLhp/wSFQvoEhUL6BIRCCASEQgj///8A////AP///wD///8A////AP///wD///8A////AASE
        QgQEhEIEBIRC/QSEQv1D0on/Q9KJ/z3OhP89zoT/B4hG9geIRvYEhEJBBIRCQQSEQjEEhEIxBIVD+wSF
        Q/shu2z/Ibts/xy4af8cuGn/BIVC+gSFQvoEhEIIBIRCCP///wD///8A////AP///wD///8A////AP//
        /wD///8ABIRCAgSEQgIEhEL+BIRC/knVjf9J1Y3/Q9KJ/0PSif8nsWr7J7Fq+wmKSPIJikjyB4lG8weJ
        RvMap1/5Gqdf+Si/cv8ov3L/Irxt/yK8bf8EhEL8BIRC/ASEQgUEhEIF////AP///wD///8A////AP//
        /wD///8A////AP///wAEhEICBIRCAgSEQv4EhEL+SdWN/0nVjf9D0on/Q9KJ/yexavsnsWr7CYpI8gmK
        SPIHiUbzB4lG8xqnX/kap1/5KL9y/yi/cv8ivG3/Irxt/wSEQvwEhEL8BIRCBQSEQgX///8A////AP//
        /wD///8A////AP///wAEhEIBBIRCAQSEQgQEhEIEBIRC/wSEQv9O2ZL/TtmS/0nVjv9J1Y7/Q9KJ/0PS
        if8+zoT/Ps6E/zjKgP84yoD/M8d7/zPHe/8tw3f/LcN3/yi/cv8ov3L/BIRC/gSEQv4EhEICBIRCAv//
        /wD///8A////AP///wD///8A////AASEQgEEhEIBBIRCBASEQgQEhEL/BIRC/07Zkv9O2ZL/SdWO/0nV
        jv9D0on/Q9KJ/z7OhP8+zoT/OMqA/zjKgP8zx3v/M8d7/y3Dd/8tw3f/KL9y/yi/cv8EhEL+BIRC/gSE
        QgIEhEIC////AP///wD///8A////AAeHRVYHh0VWB4dF8QeHRfEEhEL+BIRC/guMSvcLjEr3VN2X/1Td
        l/9O2ZL/TtmS/0nVjv9J1Y7/Q9KJ/0PSif8+zoT/Ps6E/zjKgP84yoD/M8d7/zPHe/8tw3f/LcN3/weJ
        RvYHiUb2BodE3AaHRNwEhUP3BIVD9wWGRJYFhkSWB4dFVgeHRVYHh0XxB4dF8QSEQv4EhEL+C4xK9wuM
        SvdU3Zf/VN2X/07Zkv9O2ZL/SdWO/0nVjv9D0on/Q9KJ/z7OhP8+zoT/OMqA/zjKgP8zx3v/M8d7/y3D
        d/8tw3f/B4lG9geJRvYGh0TcBodE3ASFQ/cEhUP3BYZElgWGRJYIiUbpCIlG6U3PjP9Nz4z/ZOil/2To
        pf9e45//XuOf/1nhm/9Z4Zv/VN2X/1Tdl/9O2ZL/TtmS/0nVjv9J1Y7/Q9KJ/0PSif8+zoT/Ps6E/zjK
        gP84yoD/M8d7/zPHe/8pvXL/Kb1y/yCyZ/8gsmf/HrRn/x60Z/8EhUP3BIVD9wiJRukIiUbpTc+M/03P
        jP9k6KX/ZOil/17jn/9e45//WeGb/1nhm/9U3Zf/VN2X/07Zkv9O2ZL/SdWO/0nVjv9D0on/Q9KJ/z7O
        hP8+zoT/OMqA/zjKgP8zx3v/M8d7/ym9cv8pvXL/ILJn/yCyZ/8etGf/HrRn/wSFQ/cEhUP3CYlH5QmJ
        R+VQ0pD/UNKQ/2Llov9i5aL/Y+ek/2PnpP9f5KD/X+Sg/1nhm/9Z4Zv/VN2X/1Tdl/9O2ZL/TtmS/0nV
        jv9J1Y7/Q9KJ/0PSif8+zoT/Ps6E/zjKgP84yoD/McV5/zHFef8rwXX/K8F1/ya8b/8mvG//BIRC+wSE
        QvsJiUflCYlH5VDSkP9Q0pD/YuWi/2Llov9j56T/Y+ek/1/koP9f5KD/WeGb/1nhm/9U3Zf/VN2X/07Z
        kv9O2ZL/SdWO/0nVjv9D0on/Q9KJ/z7OhP8+zoT/OMqA/zjKgP8xxXn/McV5/yvBdf8rwXX/Jrxv/ya8
        b/8EhEL7BIRC+wqLSY4Ki0mOB4hG8QeIRvEGhkT4BoZE+AyNS/cMjUv3ZOil/2Topf9f5KD/X+Sg/1nh
        m/9Z4Zv/VN2X/1Tdl/9O2ZL/TtmS/0nWjv9J1o7/Q9KJ/0PSif89zYP/Pc2D/weIRvgHiEb4BIVD+QSF
        Q/kEhEL9BIRC/QaHRKcGh0SnCotJjgqLSY4HiEbxB4hG8QaGRPgGhkT4DI1L9wyNS/dk6KX/ZOil/1/k
        oP9f5KD/WeGb/1nhm/9U3Zf/VN2X/07Zkv9O2ZL/SdaO/0nWjv9D0on/Q9KJ/z3Ng/89zYP/B4hG+AeI
        RvgEhUP5BIVD+QSEQv0EhEL9BodEpwaHRKf///8A////AP///wD///8ABIRCAQSEQgEEhEL+BIRC/mbp
        pv9m6ab/ZOil/2Topf9f5KD/X+Sg/1nhm/9Z4Zv/VN2X/1Tdl/9O2ZL/TtmS/0nWjv9J1o7/QtGI/0LR
        iP8EhEL9BIRC/f///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAEhEIBBIRCAQSE
        Qv4EhEL+Zumm/2bppv9k6KX/ZOil/1/koP9f5KD/WeGb/1nhm/9U3Zf/VN2X/07Zkv9O2ZL/SdaO/0nW
        jv9C0Yj/QtGI/wSEQv0EhEL9////AP///wD///8A////AP///wD///8A////AP///wD///8A////AASE
        QgQEhEIEBYVD/AWFQ/xm6ab/Zumm/2Xopf9l6KX/Yuaj/2Lmo/9f5KD/X+Sg/1nhm/9Z4Zv/VN2X/1Td
        l/9O2ZL/TtmS/0nWjv9J1o7/BIRC/QSEQv0EhEIBBIRCAf///wD///8A////AP///wD///8A////AP//
        /wD///8ABIRCBASEQgQFhUP8BYVD/Gbppv9m6ab/Zeil/2Xopf9i5qP/Yuaj/1/koP9f5KD/WeGb/1nh
        m/9U3Zf/VN2X/07Zkv9O2ZL/SdaO/0nWjv8EhEL9BIRC/QSEQgEEhEIB////AP///wD///8A////AP//
        /wD///8A////AP///wAEhEIDBIRCAweHRewHh0XsBIRC/QSEQv0EhEL9BIRC/QiIRvoIiEb6XeGe/13h
        nv9f5KD/X+Sg/w+QTvUPkE71BIRC/wSEQv8EhEL/BIRC/waGROoGhkTqBIRCAwSEQgP///8A////AP//
        /wD///8A////AP///wD///8A////AASEQgMEhEIDB4dF7AeHRewEhEL9BIRC/QSEQv0EhEL9CIhG+giI
        Rvpd4Z7/XeGe/1/koP9f5KD/D5BO9Q+QTvUEhEL/BIRC/wSEQv8EhEL/BoZE6gaGROoEhEIDBIRCA///
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wAEhEIDBIRCAwSEQgEEhEIB////AP//
        /wAHh0X1B4dF9V7hnv9e4Z7/ZOil/2Topf8foV7zH6Fe8wSEQmcEhEJn////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AASEQgMEhEIDBIRCAQSE
        QgH///8A////AAeHRfUHh0X1XuGe/17hnv9k6KX/ZOil/x+hXvMfoV7zBIRCZwSEQmf///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8ABYVD+wWFQ/tj5qP/Y+aj/2bppv9m6ab/TM+M/0zPjP8JiUfdCYlH3f//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wAFhUP7BYVD+2Pmo/9j5qP/Zumm/2bppv9Mz4z/TM+M/wmJ
        R90JiUfd////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AAeIRu8HiEbvScuI/0nLiP9W2Zb/VtmW/yyt
        a/osrWv6CYlHyQmJR8n///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8AB4hG7weIRu9Jy4j/ScuI/1bZ
        lv9W2Zb/LK1r+iyta/oJiUfJCYlHyf///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAHh0VcB4dFXAqK
        SN0KikjdCYlH6gmJR+oKikiqCopIqgSEQhcEhEIX////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAeH
        RVwHh0VcCopI3QqKSN0JiUfqCYlH6gqKSKoKikiqBIRCFwSEQhf///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/AAAAPwAAADwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAP/AAAD/wAAAP8AAAD/AAAA/wAAAP/DAD//ww
        A///8AP///AD///wA///8AP///AD///wA/8=
</value>
  </data>
</root>